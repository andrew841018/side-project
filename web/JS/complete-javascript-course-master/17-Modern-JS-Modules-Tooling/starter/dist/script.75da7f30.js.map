{"version":3,"sources":["shoppingChart.js","script.js"],"names":["console","log","cart","addToCart","product","money","push","total","totalQuantity","dirty_word","dirty_word2","tq","T","charAt","toUpperCase","slice","shopping","dirty","getLasrtPost","fetch","res","json","data","title","at","text","body","lastPost","lastPost2","ShoppingCart2","shoppingCost","totalPrice","quantity"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["//Exporting module\nconsole.log('export');\nexport const cart = [];\nexport const addToCart = function (product, money) {\n  cart.push({ product, money });\n  console.log(`${product} cost ${money} dollars`);\n};\nconst total = 500;\nconst totalQuantity = 50000;\nexport { total, totalQuantity as tq };\nexport default function (dirty_word, dirty_word2) {\n  console.log(`${dirty_word}${dirty_word2}`);\n}\n","/* when we using module,'use strict' always by default\nusing module means,in html we write this:\n<script type=\"module\"></script>\nthen we using module\n*/\n//importing module\nimport { total as T, tq, addToCart } from './shoppingChart.js';\nconsole.log('import');\nconsole.log(tq);\nconsole.log(T);\naddToCart('airplane'.charAt(0).toUpperCase() + 'airplane'.slice(1), 100000);\nimport * as shopping from './shoppingChart.js'; //* means everything\nconsole.log(shopping.total, shopping.tq);\n\n//dirty is new name for import function so no need to {}\n//the previous like total,addToChart has been decleared so can use {}\nimport dirty, { cart } from './shoppingChart.js'; //import default function\ndirty('holy shit', ' god damn');\n//when we call addToCart,it will modify cart,雖然cart不是在這個js所定義的\n//但仍舊會被更改到，因為在另一個js中，cart有被export,而在這個js中，cart有被import\n//因此，可以在這個js直接更改另一個js的cart\naddToCart('car', 1000);\naddToCart('pig', 30);\nconsole.log(cart);\nconst getLasrtPost = async function () {\n  //in module we don't need to put await inside the async\n  const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n  const data = await res.json();\n  //the following code do this:\n  //title=data.at(-1).title and return\n  //text=data.at(-1).body and return\n  return { title: data.at(-1).title, text: data.at(-1).body };\n};\nlet lastPost = getLasrtPost();\nconsole.log(lastPost); //it is not object but Promise\n/*\nasync function會在背景作業，由於抓資料的部分都是以await定義，因此一定會等到有資料才會回傳\n但lastPost在要資料的時候，getLastPost()還沒有產生出資料，這時候lastPost就會拿到一個\npadding Promise(因為getLastPost()是async function)。\n*/\nconst lastPost2 = await getLasrtPost();\n//此時由於lastPost2所抓取的是await function,因此會等到任務都做完才asign給lastPost2\n//所以下面lastPost2會拿到完整的資料，由於是await所以類型是object,而非Promise\nconsole.log(lastPost2);\n//closure\nconst ShoppingCart2 = (function () {\n  const cart = [];\n  const shoppingCost = 10;\n  const totalPrice = 2350;\n  const totalQuantity = 12;\n  const addToCart = function (product, quantity) {\n    cart.push({ product, quantity });\n    console.log(`${product} ${quantity} ${shoppingCost}`);\n  };\n  return {\n    addToCart,\n    cart,\n    totalPrice,\n    totalQuantity,\n  };\n})();\n//call function inside the closure\n//evne if ShoppingCart2 not return shoppingCost\n//but when we call addToCart console.log still can print shoppingCost\nShoppingCart2.addToCart('apple', 4);\n//only can call return value or function\nconsole.log(ShoppingCart2.totalPrice);\n"]}